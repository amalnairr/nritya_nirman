import autogen
import dotenv

config_list = autogen.config_list_from_json(".\AutoGen\OAI_CONFIG_LIST.json")

llm_config = {
    "cache_seed": 41,
    "temperature": 0.2,
    "config_list": config_list,
    "timeout": 90
}

user_proxy = autogen.UserProxyAgent(
    name = "Admin",
    system_message = "A human admin, approves the Kathak Compositions Generated by the AI agents. The admin can also provide feedback to the agents.",
    code_execution_config = {
        "work_dir": "coding2",
        "use_docker": False
    },
    human_input_mode = "TERMINATE",
)

# read tukda.txt
with open(".\AutoGen\Tukda.txt", "r") as f:
    tukda = f.read()
with open(".\AutoGen\Tihai.txt", "r") as f:
    tihai = f.read()
with open(".\AutoGen\Rules.txt", "r") as f:
    rules = f.read()
    
composer = autogen.AssistantAgent(
    name = "Composer1",
    llm_config = llm_config,
    system_message = """Composer. You are a Kathak composer, generate unique and new Kathak compositions based on the given prompt. Each beat must be separated by a pipe (|).
    Some examples of Kathak compositions: {tukda} {tihai}""".format(tukda=tukda, tihai=tihai),
)

critic = autogen.AssistantAgent(
    name = "Rule Checker",
    llm_config = llm_config,
    system_message = """Check the Kathak compositions generated by the composer. 
    Ensure that the compositions follow the rules of Kathak dance. Provide feedback to the composer.
    Some rules are {rules}""".format(rules=rules),
)


group_chat = autogen.GroupChat(
    agents = [composer, critic, user_proxy], messages = [], max_round=5
)

manager = autogen.GroupChatManager(groupchat = group_chat, llm_config = llm_config)

user_proxy.initiate_chat(
    manager,
    message = """
    Generate a Tukda.
    """
    )

